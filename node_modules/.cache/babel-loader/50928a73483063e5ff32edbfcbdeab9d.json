{"ast":null,"code":"import _regeneratorRuntime from \"/home/daniel/Desktop/weather-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/daniel/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/daniel/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/daniel/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/daniel/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/daniel/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/daniel/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/daniel/Desktop/weather-app/src/App.js\";\nimport React from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nvar API_key = \"e33b30e5c4249ac0b36580c63612e17c\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                city = event.target.elements.city.value;\n                country = event.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_key, \"&units=imperial\"));\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n\n                // if user inputs valid str\n                if (city && country) {\n                  console.log(data);\n\n                  _this.setState({\n                    temperature: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    humidity: data.main.humidity,\n                    description: data.weather[0].description,\n                    error: \"\"\n                  });\n                } else {\n                  _this.setState({\n                    error: \"Please enter values.\"\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-5 title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Titles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-6 form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        humidity: this.state.humidity,\n        description: this.state.description,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/daniel/Desktop/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_key","App","state","temperature","undefined","city","country","humidity","description","error","getWeather","event","preventDefault","target","elements","value","fetch","api_call","json","data","console","log","setState","main","temp","name","sys","weather","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Titles from \"./components/Titles\";\n\nimport Form from \"./components/Form\";\n\nimport Weather from \"./components/Weather\";\n\nconst API_key = \"e33b30e5c4249ac0b36580c63612e17c\";\n\nclass App extends React.Component {\n    state = {\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: undefined\n    }\n    getWeather = async(event) => {\n        event.preventDefault();\n        const city = event.target.elements.city.value;\n        const country = event.target.elements.country.value;\n        const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}&units=imperial`);\n        //converts data to json format\n        const data = await api_call.json();\n        // if user inputs valid str\n        if (city && country){\n            console.log(data);\n            this.setState({\n                temperature: data.main.temp,\n                city: data.name,\n                country: data.sys.country,\n                humidity: data.main.humidity,\n                description: data.weather[0].description,\n                error: \"\"\n            });\n        }\n        else{\n            this.setState({\n                error: \"Please enter values.\"\n            });\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <div className=\"wrapper\">\n                    <div className=\"main\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-xs-5 title-container\">\n                                    <Titles/>\n                                </div>\n                                <div className=\"col-xs-6 form-container\">\n                                {/*  prop getweather = this.function  */}\n                                    <Form getWeather={this.getWeather}/>\n                                    <Weather \n                                    temperature={this.state.temperature}\n                                    city={this.state.city}\n                                    country={this.state.country}\n                                    humidity={this.state.humidity}\n                                    description={this.state.description}\n                                    error={this.state.error}\n                                    />\n                                </div>  \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}